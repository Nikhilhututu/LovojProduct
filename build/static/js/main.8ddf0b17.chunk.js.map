{"version":3,"sources":["component/Web3D.jsx","component/UI.jsx","App.js","reportWebVitals.js","index.js"],"names":["threeContainer","mShirtObj","Web3D","useRef","React","useEffect","current","Shirt3d","createElement","Wrapper","className","id","_classCallCheck","this","document","getElementById","scene","camera","render","textureLoader","glbLoader","dirLight","hemiSphereLight","orbitController","canvasW","canvasH","modelRoot","shirt","model","texture","trouser","male","init","_createClass","key","value","_this","clientWidth","clientHeight","THREE","position","set","alpha","antialias","preserveDrawingBuffer","outputColorSpace","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","appendChild","domElement","initLight","loadAsset","initOrbitController","setAnimationLoop","renderScene","addEventListener","resize","color","shadow","mapSize","width","height","near","far","add","dirLight2","aspect","updateProjectionMatrix","_this2","loadingManager","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","planGeometry","scale","maleMesh","name","load","colorSpace","wrapS","wrapT","magFilter","minFilter","maleMat","map","alphaTest","material","gltf","traverse","child","isMesh","updateTexture","dispose","needsUpdate","rotation","y","lookAt","pos","x","z","val","e","console","log","onStart","url","itemsLoaded","itemsTotal","style","display","onLoad","type","Math","PI","isFull","shirtRoot","includes","visible","isNormalCollar","tex","_this3","applyTexture","_this4","repeat","metalness","roughness","flipY","styled","section","_templateObject","_taggedTemplateLiteral","UI","_React$useState","useState","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","_React$useState5","_React$useState6","onClickView","changeView","onClick","App","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.8ddf0b17.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as THREE from 'three';\r\nimport {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nlet threeContainer;\r\nlet mShirtObj;\r\nconst Web3D = () => {\r\n    threeContainer = useRef(null);\r\n    React.useEffect(()=>{\r\n        if(threeContainer.current)\r\n            return;\r\n            mShirtObj = new Shirt3d();\r\n        // init3D();\r\n    },[])\r\n    return (\r\n        <Wrapper >\r\n            <div className='loader_container' id='loader'>\r\n               <div className='lds-dual-ring'></div>\r\n            </div>\r\n            <div className='three_container' id='3d-container'></div>\r\n        </Wrapper>\r\n    );\r\n};\r\nexport default Web3D;\r\n\r\nexport class Shirt3d{\r\n    constructor(){\r\n        threeContainer.current = document.getElementById('3d-container');\r\n        this.scene  = null;\r\n        this.camera = null;\r\n        this.render = null;\r\n        this.textureLoader = null;\r\n        this.glbLoader= null;\r\n        this.dirLight=null;\r\n        this.hemiSphereLight = null;\r\n        this.orbitController  = null;\r\n        this.canvasW = 0;\r\n        this.canvasH = 0;\r\n        this.modelRoot= null;\r\n        this.shirt    = {model:\"\",texture:\"\"};\r\n        this.trouser  = {model:\"\",texture:\"\"};\r\n        this.male     = {model:\"\",texture:\"\"};\r\n        this.init();\r\n    }\r\n    init(){\r\n        this.canvasW = threeContainer.current.clientWidth;\r\n        this.canvasH = threeContainer.current.clientHeight;\r\n        this.scene   = new THREE.Scene(\"shirt_scene\");\r\n        this.camera = new THREE.PerspectiveCamera(60,this.canvasW/this.canvasH,.1,1000);\r\n        this.camera.position.set(0,3.5,3.5);\r\n        \r\n        this.render = new THREE.WebGLRenderer({alpha:true,antialias:true,preserveDrawingBuffer:true});\r\n        // this.render.autoClear=false;\r\n        this.render.outputColorSpace=THREE.SRGBColorSpace;\r\n        this.render.setPixelRatio(window.devicePixelRatio);\r\n        this.render.setClearColor(0x000000,0);\r\n        this.render.setSize(this.canvasW,this.canvasH);\r\n        // this.render.shadowMap.enabled=true;\r\n        // this.render.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        threeContainer.current.appendChild(this.render.domElement);\r\n        this.initLight();\r\n        this.loadAsset();\r\n        this.initOrbitController();\r\n        this.render.setAnimationLoop(()=>this.renderScene());\r\n        window.addEventListener(\"resize\",()=>{\r\n            this.resize();\r\n        })\r\n    }\r\n    initLight(){\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff,.5);\r\n        this.dirLight.color = new THREE.Color(0xffffff);\r\n        this.dirLight.position.set(0,1,5);\r\n        this.dirLight.shadow.mapSize.width = 512;\r\n        this.dirLight.shadow.mapSize.height= 512;\r\n        this.dirLight.shadow.camera.near=.1;\r\n        this.dirLight.shadow.camera.far=1000;\r\n        this.scene.add(this.dirLight);\r\n        \r\n\r\n        this.dirLight2 = new THREE.DirectionalLight(0xffffff,1);\r\n        this.dirLight2.color = new THREE.Color(0xff0000);\r\n        this.dirLight2.position.set(0,1,-5);\r\n        this.dirLight2.shadow.mapSize.width = 512;\r\n        this.dirLight2.shadow.mapSize.height= 512;\r\n        this.dirLight2.shadow.camera.near=.1;\r\n        this.dirLight2.shadow.camera.far=1000;\r\n        this.scene.add(this.dirLight2);\r\n\r\n        this.hemiSphereLight = new THREE.HemisphereLight(0xffffff,0xffffff,.25);\r\n        this.hemiSphereLight.position.set(0,10,0);\r\n        this.scene.add(this.hemiSphereLight);\r\n    }\r\n    initOrbitController(){\r\n        // this.orbitController = new OrbitControls(this.camera,this.render.domElement);\r\n        // this.orbitController.enablePan = false;\r\n        // this.orbitController.target.set(0,2,0);\r\n        // this.orbitController.minDistance = 3.2;\r\n        // this.orbitController.maxDistance = 3.2;\r\n        // this.orbitController.minPolarAngle = Math.PI/2;\r\n        // this.orbitController.maxPolarAngle = Math.PI/2;\r\n        // this.orbitController.update();\r\n        // this.orbitController.enabled=false;\r\n    }\r\n    renderScene(){\r\n        this.render.render(this.scene,this.camera);\r\n        \r\n    }\r\n    resize(){\r\n        this.canvasW=threeContainer.current.clientWidth;\r\n        this.canvasH=threeContainer.current.clientHeight;\r\n        this.camera.aspect = this.canvasW/this.canvasH;\r\n        this.camera.updateProjectionMatrix();\r\n        this.render.setSize(this.canvasW,this.canvasH);\r\n    }\r\n    loadAsset(){\r\n        this.loadingManager = new THREE.LoadingManager();\r\n        this.modelRoot = new THREE.Object3D();\r\n        this.glbLoader = new GLTFLoader(this.loadingManager);\r\n        this.dracoLoader = new DRACOLoader(this.loadingManager);\r\n        this.dracoLoader.setDecoderPath('./draco/gltf/');\r\n        this.glbLoader.setDRACOLoader(this.dracoLoader);\r\n        this.textureLoader = new THREE.TextureLoader(this.loadingManager);\r\n        const ratio = 1;\r\n        const scale = .75;\r\n        const planGeometry = new THREE.PlaneGeometry(scale,scale*ratio,32,32);\r\n        this.maleMesh  = new THREE.Mesh(planGeometry);\r\n        this.maleMesh.name=\"male_pos\";\r\n        const texture   = this.textureLoader.load(\"3dmodel/body_images/front_face.png\");\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.magFilter = THREE.NearestFilter;\r\n        texture.minFilter  = THREE.NearestFilter;\r\n        \r\n        const maleMat = new THREE.MeshBasicMaterial({map:texture});\r\n        maleMat.alphaTest=true;\r\n        this.maleMesh.material = maleMat;\r\n        this.maleMesh.position.set(0,3.84,-.010);\r\n        this.scene.add(this.maleMesh);\r\n\r\n        const cloth_scale = .0176;\r\n        this.glbLoader.load(\"3dmodel/male/scene.glb\",(gltf)=>{\r\n            this.male.model = gltf.scene;\r\n            this.modelRoot.add(this.male.model);\r\n            this.male.model.scale.set(cloth_scale,cloth_scale,cloth_scale);\r\n        })\r\n        this.glbLoader.load(\"3dmodel/male/shirt.glb\",(gltf)=>{\r\n            this.shirt.model = gltf.scene;\r\n            this.shirt.model.scale.set(cloth_scale,cloth_scale,cloth_scale);\r\n            // this.shirt.model.renderOrder=0;\r\n            this.modelRoot.add(this.shirt.model);\r\n            this.shirt.model.traverse((child)=>{\r\n                if(child.isMesh){\r\n                    this.updateTexture('3dmodel/body_images/texture.jpg');\r\n                }\r\n            })\r\n        })\r\n        this.glbLoader.load(\"3dmodel/male/trouser.glb\",(gltf)=>{\r\n            this.trouser.model = gltf.scene;\r\n            this.trouser.model.scale.set(cloth_scale,cloth_scale,cloth_scale);\r\n            this.modelRoot.add(this.trouser.model);\r\n            // this.trouser.model.position.y=-.06;\r\n            this.trouser.model.traverse((child)=>{\r\n                if(child.isMesh){\r\n                    child.material.dispose();\r\n                    child.material.needsUpdate = true;\r\n                    child.material = new THREE.MeshBasicMaterial();\r\n                    child.material.color = new THREE.Color(0x000000);\r\n                //   child.material.depthTest = false;\r\n                //   child.material.renderOrder=10;\r\n                }\r\n            })\r\n            this.scene.add(this.modelRoot);\r\n        })\r\n        this.scene.add(this.modelRoot);\r\n        this.modelRoot.rotation.y = 0;\r\n        this.modelRoot.position.y = .8;\r\n        this.camera.lookAt(new THREE.Vector3(0,2.5,0))\r\n        const pos = {x:0,y:0,z:0,val:.01};\r\n\r\n        document.addEventListener(\"keydown\",(e)=>{\r\n            // console.log(e.key) ;\r\n             switch(e.key){\r\n                 case \"ArrowLeft\":\r\n                        pos.x -=pos.val;\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    pos.x +=pos.val;\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    pos.y +=pos.val;\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    pos.y -=pos.val;\r\n                    break;\r\n             }\r\n             console.log(\"!!! pos!! \",pos);\r\n            //  this.maleMesh.position.set(0,pos.x,pos.y);\r\n            // this.modelRoot.scale.x=.02;\r\n        })\r\n        this.loadingManager.onStart=(url, itemsLoaded, itemsTotal)=>{\r\n            // console.log('Loading started');\r\n            document.getElementById(\"loader\").style.display = \"flex\";\r\n            // document.getElementsByClassName(\"loader\")[0].style.backgroundColor  =  \"rgba(0,0,0,.85)\";\r\n        }\r\n        this.loadingManager.onLoad=()=>{\r\n            // console.log('Loading completed');\r\n            document.getElementById(\"loader\").style.display = \"none\";\r\n        }\r\n    }\r\n    changeView(type){\r\n        let texture;\r\n        switch(type){\r\n            case 0 :\r\n                    texture   = this.textureLoader.load(\"3dmodel/body_images/front_face.png\");\r\n                    this.modelRoot.rotation.y = 0;\r\n                break;\r\n            case 1 :\r\n                    texture   = this.textureLoader.load(\"3dmodel/body_images/back_face.png\");\r\n                    this.modelRoot.rotation.y = Math.PI;\r\n                break;\r\n            case 2 :\r\n                    texture   = this.textureLoader.load(\"3dmodel/body_images/side_face.png\");\r\n                    this.modelRoot.rotation.y = Math.PI/3;\r\n                break;\r\n        }\r\n        this.maleMesh.material.needsUpdate= true;\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.magFilter = THREE.NearestFilter;\r\n        texture.minFilter  = THREE.NearestFilter;\r\n        this.maleMesh.material.map = texture;\r\n    }\r\n    changeShirt(isFull){\r\n        this.shirtRoot.traverse((child)=>{\r\n            if(child.isMesh){\r\n                if(child.name.includes(\"full_sleeves\")){\r\n                    child.visible=isFull;\r\n                }\r\n                if(child.name.includes(\"short_sleeves\")){\r\n                    child.visible=!isFull;\r\n                }\r\n                if(child.name.includes(\"cuffs\")){\r\n                    child.visible=isFull;\r\n                }\r\n                \r\n            }\r\n        });\r\n    }\r\n    changeCollar(isNormalCollar){\r\n        this.shirtRoot.traverse((child)=>{\r\n            if(child.isMesh){\r\n                if(child.name.includes(\"normal_collar\")){\r\n                    child.visible=isNormalCollar;\r\n                }\r\n                if(child.name.includes(\"stand_collar\")){\r\n                    child.visible=!isNormalCollar;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    updateTexture(tex){\r\n        console.log(tex);\r\n        const texture  = this.textureLoader.load(tex);\r\n        \r\n        this.shirt.model.traverse((child)=>{\r\n            if(child.isMesh){\r\n                // if(!child.name.includes(\"thread\")  && !child.name.includes(\"button\"))\r\n                { //&& !child.name.includes(\"placket\")\r\n                  this.applyTexture(child,texture);\r\n                }\r\n            }\r\n         })\r\n        //  document.getElementById(\"my-file\").value = \"\";\r\n     } \r\n     changeCollarTexture(tex){\r\n        const texture  = this.textureLoader.load(tex);\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.magFilter = THREE.NearestFilter;\r\n        texture.minFilter  = THREE.NearestFilter;\r\n        texture.repeat.set( 1, 1);\r\n        this.shirtRoot.traverse((child)=>{\r\n            if(child.isMesh){\r\n                if(child.name.includes(\"collar\")){\r\n                  this.applyTexture(child,texture);\r\n                }\r\n            }\r\n         })\r\n        // document.getElementById(\"my-file\").value = \"\";\r\n     } \r\n     changeButtonColor(color,type){\r\n        this.shirtRoot.traverse((child)=>{\r\n            if(child.isMesh){\r\n                if(child.name.includes(\"button\") && type===\"button\"){\r\n                    child.material.color = new THREE.Color(color);\r\n                    child.material.metalness=0;\r\n                    child.material.roughness =1;\r\n                }\r\n                else if(child.name.includes(\"thread\") && type===\"thread\"){\r\n                    child.material.color = new THREE.Color(color);\r\n                    child.material.metalness=0;\r\n                    child.material.roughness =1;\r\n                }\r\n            }\r\n         })\r\n     } \r\n     applyTexture(child,texture){\r\n        if(texture){\r\n            texture.colorSpace = THREE.SRGBColorSpace;\r\n            texture.wrapS = THREE.RepeatWrapping;\r\n            texture.wrapT = THREE.RepeatWrapping;\r\n            texture.magFilter = THREE.NearestFilter;\r\n            texture.minFilter  = THREE.NearestFilter;\r\n            texture.repeat.set( .002, .002);\r\n        }\r\n        if(child.material){\r\n            child.material.dispose();\r\n        }\r\n        child.material = new THREE.MeshBasicMaterial();\r\n        child.material.map = texture;\r\n        child.material.map.flipY = false;\r\n        child.material.needsUpdate = true;\r\n     }\r\n}\r\n\r\n\r\nexport const changeTexture=(isFull,tex)=>{\r\n    //  if(isFull){\r\n    //     fullSleevShirt.traverse((child)=>{\r\n    //         if(child.isMesh){\r\n    //            const texture  = textureLoader.load(tex);\r\n    //             texture.colorSpace = THREE.SRGBColorSpace;\r\n    //             texture.wrapS = THREE.RepeatWrapping;\r\n    //             texture.wrapT = THREE.RepeatWrapping;\r\n    //             texture.magFilter = THREE.NearestFilter;\r\n    //             texture.minFilter  = THREE.NearestFilter;\r\n    //             texture.repeat.set( 1, 1);\r\n    //             child.material.map = texture;\r\n    //             child.material.map.flipY = false;\r\n    //             child.material.needsUpdate = true;\r\n    //         }\r\n    //    })\r\n    //  } \r\n    //  else{\r\n    //         shortShirt.traverse((child)=>{\r\n    //             if(child.isMesh){\r\n    //                 console.log(\"^^^^^^^^^^^^^\")\r\n    //                const texture  = textureLoader.load(tex);\r\n    //                texture.colorSpace = THREE.SRGBColorSpace;\r\n    //                texture.wrapS = THREE.RepeatWrapping;\r\n    //                texture.wrapT = THREE.RepeatWrapping;\r\n    //                texture.magFilter = THREE.NearestFilter;\r\n    //                texture.minFilter  = THREE.NearestFilter;\r\n    //                texture.repeat.set( 1, 1);\r\n    //                child.material.map = texture;\r\n    //                child.material.map.flipY = false;\r\n    //                child.material.needsUpdate = true;\r\n    //             }\r\n    //        })\r\n    //     } \r\n    //     document.getElementById(\"myFile\").value = \"\";\r\n      \r\n}\r\n const planeCurve=(g, z)=>{\r\n    let p = g.parameters;\r\n    let hw = p.width * 0.5;\r\n    \r\n    let a = new THREE.Vector2(-hw, 0);\r\n    let b = new THREE.Vector2(0, z);\r\n    let c = new THREE.Vector2(hw, 0);\r\n    \r\n    let ab = new THREE.Vector2().subVectors(a, b);\r\n    let bc = new THREE.Vector2().subVectors(b, c);\r\n    let ac = new THREE.Vector2().subVectors(a, c);\r\n    \r\n    let r = (ab.length() * bc.length() * ac.length()) / (2 * Math.abs(ab.cross(ac)));\r\n    \r\n    let center = new THREE.Vector2(0, z - r);\r\n    let baseV = new THREE.Vector2().subVectors(a, center);\r\n    let baseAngle = baseV.angle() - (Math.PI * 0.5);\r\n    let arc = baseAngle * 2;\r\n    \r\n    let uv = g.attributes.uv;\r\n    let pos = g.attributes.position;\r\n    let mainV = new THREE.Vector2();\r\n    for (let i = 0; i < uv.count; i++){\r\n        let uvRatio = 1 - uv.getX(i);\r\n      let y = pos.getY(i);\r\n      mainV.copy(c).rotateAround(center, (arc * uvRatio));\r\n      pos.setXYZ(i, mainV.x, y, -mainV.y);\r\n    }\r\n    \r\n    pos.needsUpdate = true;\r\n    \r\n  }\r\nconst Wrapper = styled.section`\r\n   width: 100%;\r\n   height: 100vh;\r\n   z-index: -1;\r\n   position: fixed;\r\n   background-color: #9BA4B5;\r\n   .three_container{\r\n      width: 100%;\r\n      height: 100%;\r\n   }\r\n   .loader_container{\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgba(0,0,0,.9);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n   }\r\n   .lds-dual-ring{\r\n      display: inline-block;\r\n      width: 5rem;\r\n      height: 5rem;\r\n    }\r\n    .lds-dual-ring:after {\r\n        content: \" \";\r\n        display: block;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        margin: 8px;\r\n        border-radius: 50%;\r\n        border: 2px solid #fff;\r\n        border-color: #fff transparent #fff transparent;\r\n        animation: lds-dual-ring 1.2s linear infinite;\r\n    }\r\n    @keyframes lds-dual-ring {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n`\r\n\r\nexport {mShirtObj};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { mShirtObj } from './Web3D';\r\n\r\nconst uiBtn=[\"full_sleeves\",\"half_sleeves\",\"normal_collar\",\"stand_collar\",\"button\",\"thread\"];\r\nconst UI = () => {\r\n    const [isFull,setFull] = React.useState(true);\r\n    const [type,setType]   = React.useState(0);\r\n    const [isNormalCollar,setCollar] = React.useState(true);\r\n    \r\n    const onClickView=(type)=>{\r\n        mShirtObj.changeView(type);\r\n    }\r\n    const onClickShirtType=(type)=>{\r\n        if(type ==='full')\r\n            setFull(true);\r\n        else    \r\n            setFull(false);\r\n        mShirtObj.changeShirt(type==='full'?true:false);\r\n    }\r\n    const onClickCollarType=(type)=>{\r\n        if(type ==='normal')\r\n            setCollar(true);\r\n        else    \r\n            setCollar(false);\r\n        mShirtObj.changeCollar(type==='normal'?true:false);\r\n    }\r\n    const onClickIcon=(current,id)=>{\r\n        const buttons = document.querySelectorAll('.active');\r\n        buttons.forEach((e,i)=>{\r\n            e.classList.remove('active');\r\n        })\r\n        current.target.classList.add('active');\r\n        document.getElementsByClassName('file-input-container')[0].style.top = 2+id*5.2+\"rem\";\r\n        document.getElementsByClassName('color-input-container')[0].style.top = 2+id*5.2+\"rem\";\r\n        switch(id){\r\n            case 0:\r\n                onClickShirtType(\"full\");\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"block\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"none\";\r\n                break;\r\n            case 1:\r\n                onClickShirtType(\"half\");\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"block\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"none\";\r\n                break;\r\n            case 2:\r\n                onClickCollarType(\"normal\");\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"block\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"none\";\r\n                break;\r\n            case 3:\r\n                onClickCollarType(\"stand\");\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"block\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"none\";\r\n                break;\r\n            case 4:\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"none\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"block\";\r\n                break;\r\n            case 5:\r\n                document.getElementsByClassName('file-input-container')[0].style.display = \"none\";\r\n                document.getElementsByClassName('color-input-container')[0].style.display = \"block\";\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <Wrapper>\r\n\r\n             <div className='view_container'>\r\n                 <div onClick={()=>{\r\n                    onClickView(0);\r\n                 }}>\r\n                    Front\r\n                 </div>\r\n                  <div onClick={()=>{\r\n                     onClickView(1);\r\n                  }}>\r\n                      back\r\n                  </div>\r\n                  <div onClick={()=>{\r\n                     onClickView(2);\r\n                  }}>\r\n                      side\r\n                  </div>\r\n             </div>  \r\n            {/* <div className='container'>\r\n                {\r\n                    uiBtn.map((src,index)=>{\r\n                         return(\r\n                                <div className={index===0?'img-icons active':'img-icons'} key={index} onClick={(e)=>{\r\n                                        setType(index);\r\n                                        onClickIcon(e,index);\r\n                                }} >\r\n                                    <img src={`./3dmodel/ui/${src}.png`} alt={src} />\r\n                                </div>\r\n                          )\r\n                     })\r\n                }\r\n         </div> \r\n          <div className='container2'>\r\n             <div className='file-input-container'>\r\n                    <input  className='file-input' type=\"file\" accept=\".jpg, .jpeg, .png\" id=\"my-file\" name=\"shirt_name\" onChange={(e)=>{\r\n                        const url = URL.createObjectURL(e.target.files[0]);\r\n                        switch(type){\r\n                            case 0:case 1:\r\n                                // console.log(\"%%%%%%%\")\r\n                                    mShirtObj.changeShirtTexture(isFull,url);\r\n                                break;\r\n                            case 2:case 3:\r\n                                    mShirtObj.changeCollarTexture(url);\r\n                                break;\r\n                        }\r\n                        \r\n                    }}/>\r\n                    <label className='input-label' htmlFor=\"my-file\" >upload</label>\r\n             </div>\r\n             <div className='color-input-container'>\r\n                    <input  className='color-input' type='color'  id=\"color-pick\" name=\"color-change\" onChange={(e)=>{\r\n                        switch(type){\r\n                            case 4: \r\n                                mShirtObj.changeButtonColor(e.target.value,\"button\");\r\n                                break;    \r\n                            case 5:\r\n                                mShirtObj.changeButtonColor(e.target.value,\"thread\");\r\n                                break;    \r\n                        }\r\n                    }}/>\r\n                    <label className='input-label' htmlFor=\"color-pick\" >Color</label>\r\n             </div>\r\n         </div> */}\r\n        </Wrapper>\r\n    );\r\n    \r\n};\r\nexport default UI;\r\nconst Wrapper = styled.section`\r\n    /* position: absolute; */\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    pointer-events: none;\r\n    .view_container{\r\n         margin: 1rem;\r\n         display: flex;\r\n         gap: 1rem;\r\n         text-transform: capitalize;\r\n         pointer-events: all;\r\n         cursor: pointer;\r\n         user-select: none;\r\n         div{\r\n             padding: .25rem 1rem;\r\n             border: 1px solid #213555;\r\n             border-radius: 1rem;\r\n             background-color: #DDE6ED;\r\n             &:active{\r\n                transform: scale(.9);\r\n             }\r\n         }\r\n    }\r\n    .container{\r\n        pointer-events: all;\r\n        display: flex;\r\n        gap: 1rem;\r\n        padding: 1rem;\r\n        user-select: none;\r\n        flex-direction: column;\r\n        .img-icons{\r\n            width: 4rem;\r\n            cursor: pointer;\r\n            /* outline: #213555 solid; */\r\n            img{\r\n                padding: 0%;\r\n                margin: 0%;\r\n                width: 100%;\r\n                text-align: center;\r\n            }\r\n        }\r\n        .active{\r\n            outline: aliceblue solid;\r\n        }\r\n    }\r\n    .container2{\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 1rem;\r\n        margin-top: 1.5rem;\r\n        pointer-events: all;\r\n        gap: 2rem;\r\n        .file-input-container{\r\n            position: absolute;     \r\n            right: 6rem;\r\n            top: 2rem;\r\n            .file-input{\r\n                width: 0;\r\n                height: 0;\r\n                padding: 0%;\r\n                margin: 0%;\r\n                overflow: hidden;\r\n            }\r\n            transition: all linear .3s;\r\n        }\r\n        .color-input-container{\r\n            position: absolute;     \r\n            right: 6rem;\r\n            top: 2rem;\r\n            display: none;\r\n            .color-input{\r\n                width: 4rem;\r\n                height: 2rem;\r\n                margin-right: .5rem;\r\n            }\r\n            transition: all linear .3s;\r\n        }\r\n        .input-label{\r\n            padding: .5rem 1.5rem;\r\n            font-size: 1.2rem;\r\n            user-select: none;\r\n            background-color:#213555;\r\n            color: aliceblue;\r\n            border-radius: 10px;\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            text-transform: capitalize;\r\n            transition: all .4s;\r\n            outline: 1px solid #DDE6ED;\r\n            &:hover{\r\n                background-color:#DDE6ED;\r\n                color:#213555;\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react';\nimport UI from './component/UI';\nimport Web3D from './component/Web3D';\n\nconst App = () => {\n  console.log(\"##########\")\n  return (\n      <>\n         <Web3D/>\n         <UI/>\n      </>\n  );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}