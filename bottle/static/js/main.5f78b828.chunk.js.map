{"version":3,"sources":["component/Web3D.jsx","App.js","component/UI.jsx","reportWebVitals.js","index.js"],"names":["threeContainer","mOrbitController","mScene","mRender","mCamera","mLight","textureLoader","loader","width","height","mBottle3d","Web3D","useRef","React","useEffect","current","init3D","createElement","Wrapper","id","document","getElementById","clientWidth","clientHeight","THREE","position","set","antialias","alpha","preserveDrawingBuffer","outputColorSpace","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","shadowMap","enabled","type","appendChild","domElement","setAnimationLoop","renderScene","y","add","dirLight","OrbitControls","enablePan","console","log","minZoom","minDistance","maxDistance","update","loadAsset","render","addEventListener","aspect","updateProjectionMatrix","GLTFLoader","parent","load","gltf","scene","scale","logo","colorSpace","planGeometry","planeCurve","logoMesh","mat","map","side","transparent","color","material","rotation","logoMesh2","clone","traverse","child","isMesh","g","z","hw","parameters","a","b","c","ab","subVectors","bc","ac","r","length","Math","abs","cross","center","arc","angle","PI","uv","attributes","pos","mainV","i","count","uvRatio","getX","getY","copy","rotateAround","setXYZ","x","needsUpdate","styled","section","_templateObject","_taggedTemplateLiteral","App","div","Fragment","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.5f78b828.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\r\nlet threeContainer,mOrbitController,mScene,mRender,mCamera,mLight,textureLoader;\r\nlet loader,width,height;\r\nlet fullSleevShirt,shortShirt;\r\nlet mBottle3d;\r\nconst Web3D = () => {\r\n    threeContainer = useRef(null);\r\n    React.useEffect(()=>{\r\n        if(threeContainer.current)\r\n            return;\r\n        init3D();\r\n    },[])\r\n    return (\r\n        <Wrapper id='3d-container'></Wrapper>\r\n    );\r\n};\r\nexport default Web3D;\r\nconst init3D=()=>{\r\n    threeContainer.current = document.getElementById('3d-container');\r\n    width   = threeContainer.current.clientWidth;\r\n    height  = threeContainer.current.clientHeight;\r\n    mScene  = new THREE.Scene(\"first-scene\");\r\n    // mScene.background = new THREE.Color(0xD8C4B6);\r\n    // mScene.background = new THREE.Color(0x213555);\r\n    mCamera = new THREE.PerspectiveCamera(75,width/height,.1,1000);\r\n    mCamera.position.set(0,0,10);\r\n    mRender = new THREE.WebGLRenderer({antialias: true,alpha:true,preserveDrawingBuffer: true});\r\n    mRender.outputColorSpace = THREE.SRGBColorSpace;\r\n    mRender.setPixelRatio(window.devicePixelRatio);\r\n    mRender.setClearColor(0x000000,0);\r\n    mRender.setSize(width,height);\r\n    mRender.shadowMap.enabled = true;\r\n    mRender.shadowMap.type = THREE.PCFSoftShadowMap; // default THREE.PCFShadowMap\r\n    threeContainer.current.appendChild(mRender.domElement);\r\n    mRender.setAnimationLoop(renderScene);\r\n    mLight  = new THREE.HemisphereLight( 0xffffff,0xffffff,1);\r\n    mLight.position.y=20;\r\n    mScene.add(mLight);\r\n\r\n    const dirLight  = new THREE.DirectionalLight( 0xffffff,1);\r\n    dirLight.position.set(0,20,20);\r\n    // dirLight.castShadow = true; // default false\r\n    // dirLight.shadow.mapSize.width = 512; // default\r\n    // dirLight.shadow.mapSize.height = 512; // default\r\n    // dirLight.shadow.camera.near = 0.5; // default\r\n    // dirLight.shadow.camera.far = 500; // default\r\n    mScene.add(dirLight);\r\n\r\n    // const ambientLight = new THREE.AmbientLight(0xffffff,.5);\r\n    // ambientLight.position.y=10;\r\n    // mScene.add(ambientLight);\r\n\r\n    mOrbitController = new OrbitControls(mCamera,mRender.domElement);\r\n    mOrbitController.enablePan = false;\r\n    console.log(mOrbitController.minZoom);\r\n    mOrbitController.minDistance = 1;\r\n    mOrbitController.maxDistance = 8;\r\n    mOrbitController.update();\r\n    // mOrbitController.enabled=false;\r\n    loadAsset();\r\n}\r\nconst  renderScene=()=>{\r\n    mRender.render(mScene,mCamera);\r\n    \r\n};\r\nwindow.addEventListener(\"resize\", ()=>{\r\n    width   = threeContainer.current.clientWidth;\r\n    height  = threeContainer.current.clientHeight;\r\n    mCamera.aspect = width / height;\r\n    mCamera.updateProjectionMatrix();\r\n    mRender.setSize(width, height);\r\n    mRender.render( mScene,mCamera);\r\n });\r\n\r\nconst loadAsset=()=>{\r\n   loader = new GLTFLoader();\r\n   textureLoader   = new THREE.TextureLoader();\r\n//  const root = new THREE.Object3D();\r\n\r\n//  const malePlan  = new THREE.PlaneGeometry(6,10,32,32);\r\n//  const maleMesh  = new THREE.Mesh(malePlan);\r\n//  const texture   = textureLoader.load(\"3dmodel/male_y.png\");\r\n//  texture.colorSpace = THREE.SRGBColorSpace;\r\n//  const maleMat = new THREE.MeshStandardMaterial({map:texture});\r\n//  maleMat.alphaTest=true;\r\n//  maleMesh.material = maleMat;\r\n//  root.add(maleMesh);\r\n// //  mScene.add(maleMesh);\r\n\r\n//     const shirt_tex      = textureLoader.load(\"3dmodel/texture/map.jpg\");\r\n//     const shirt_normal   = textureLoader.load(\"3dmodel/texture/normal.jpg\");\r\n//     texture.colorSpace = THREE.SRGBColorSpace;\r\n//     const shirtMat = new THREE.MeshStandardMaterial({metalness:0,roughness:1,map:shirt_tex,normalMap:shirt_normal});\r\n//     // shirtMat.map.flipY = false;\r\n//     // shirtMat.normalMap.flipY = false;\r\n//     const shortshirtMat = new THREE.MeshStandardMaterial({metalness:0,roughness:1});\r\n//     loader.load(\"3dmodel/ManShirt_1.glb\",(gltf)=>{\r\n//         fullSleevShirt = gltf.scene;\r\n//         fullSleevShirt.visible=true;\r\n//         fullSleevShirt.renderOrder=100;\r\n//         fullSleevShirt.traverse((child)=>{\r\n//              if(child.isMesh){\r\n//                 shirtMat.color = new THREE.Color(0xffffff);\r\n//                 child.material=shirtMat;\r\n//                 child.material.depthTest = false;\r\n//                 // child.material.depthWrite = false;\r\n//                 // child.castShadow = true; //default is false\r\n//              }\r\n//         })\r\n//         fullSleevShirt.scale.set(2,2,2);\r\n//         fullSleevShirt.position.z = .1;\r\n//         root.add(gltf.scene);\r\n//         // mScene.add(gltf.scene);\r\n//     })\r\n//     loader.load(\"3dmodel/ManShirtshortSleeves.glb\",(gltf)=>{\r\n//         shortShirt = gltf.scene;\r\n//         shortShirt.visible=false;\r\n//         shortShirt.scale.set(2,2,2);\r\n//         shortShirt.position.z = .1;\r\n//         shortShirt.traverse((child)=>{\r\n//              if(child.isMesh){\r\n//                 shortshirtMat.color = new THREE.Color(0xffffff);\r\n//                 child.material=shortshirtMat;\r\n//                 // child.castShadow = true; //default is false\r\n//              }\r\n//         })\r\n//         root.add(gltf.scene);\r\n//         // mScene.add(gltf.scene);\r\n//     })\r\n//     mScene.add(root);\r\n    const parent = new THREE.Object3D();\r\n    loader.load(\"3dmodel/bottle.glb\",(gltf)=>{\r\n        mBottle3d = gltf.scene;\r\n        parent.add(mBottle3d);\r\n        mBottle3d.scale.set(20,20,20);\r\n        mBottle3d.position.y-=3;\r\n        const logo = textureLoader.load(\"3dmodel/navy-laser-ready.png\");\r\n        logo.colorSpace = THREE.SRGBColorSpace;\r\n        const planGeometry = new THREE.PlaneGeometry(1.267,1,32,32);\r\n        planeCurve(planGeometry,.2);\r\n        const logoMesh = new THREE.Mesh(planGeometry);\r\n        logoMesh.scale.set(1,1,-1);\r\n        const mat = new THREE.MeshBasicMaterial({map:logo,side:THREE.DoubleSide});\r\n        mat.transparent=true;\r\n        mat.color = new THREE.Color(0xffffff);\r\n        logoMesh.material = mat;\r\n        logoMesh.position.set(0,-1,.8145);\r\n        logoMesh.rotation.set(0,.25,0);\r\n        parent.add(logoMesh);\r\n        const logoMesh2 = logoMesh.clone();\r\n        logoMesh2.position.set(0,-1,-.58);\r\n        logoMesh2.rotation.set(0,-.25,0);\r\n        logoMesh2.scale.set(-1,1,1);\r\n        parent.add(logoMesh2);\r\n        mBottle3d.traverse((child)=>{\r\n             if(child.isMesh){\r\n                // console.log(child.material)\r\n                // child.material.map.colorSpace = THREE.SRGBColorSpace;;\r\n             }\r\n        })\r\n        mScene.add(parent);\r\n    })\r\n}\r\nexport const changeTexture=(isFull,tex)=>{\r\n     if(isFull){\r\n        fullSleevShirt.traverse((child)=>{\r\n            if(child.isMesh){\r\n                console.log(\"!!!!!!!!!!!!!!!!!!\");\r\n               const texture  = textureLoader.load(tex);\r\n               texture.colorSpace = THREE.SRGBColorSpace;\r\n               child.material.map = texture;\r\n               child.material.map.flipY = false;\r\n               child.material.needsUpdate = true;\r\n            }\r\n       })\r\n     } \r\n     else{\r\n            shortShirt.traverse((child)=>{\r\n                if(child.isMesh){\r\n                    console.log(\"^^^^^^^^^^^^^\")\r\n                   const texture  = textureLoader.load(tex);\r\n                   texture.colorSpace = THREE.SRGBColorSpace;\r\n                   child.material.map = texture;\r\n                   child.material.map.flipY = false;\r\n                   child.material.needsUpdate = true;\r\n                }\r\n           })\r\n        } \r\n        document.getElementById(\"myFile\").value = \"\";\r\n      \r\n}\r\nexport const changeShirt=(isFull)=>{\r\n    console.log(isFull)\r\n    fullSleevShirt.visible= isFull?true:false;\r\n    shortShirt.visible    = !isFull?true:false;\r\n}\r\n const planeCurve=(g, z)=>{\r\n    let p = g.parameters;\r\n    let hw = p.width * 0.5;\r\n    \r\n    let a = new THREE.Vector2(-hw, 0);\r\n    let b = new THREE.Vector2(0, z);\r\n    let c = new THREE.Vector2(hw, 0);\r\n    \r\n    let ab = new THREE.Vector2().subVectors(a, b);\r\n    let bc = new THREE.Vector2().subVectors(b, c);\r\n    let ac = new THREE.Vector2().subVectors(a, c);\r\n    \r\n    let r = (ab.length() * bc.length() * ac.length()) / (2 * Math.abs(ab.cross(ac)));\r\n    \r\n    let center = new THREE.Vector2(0, z - r);\r\n    let baseV = new THREE.Vector2().subVectors(a, center);\r\n    let baseAngle = baseV.angle() - (Math.PI * 0.5);\r\n    let arc = baseAngle * 2;\r\n    \r\n    let uv = g.attributes.uv;\r\n    let pos = g.attributes.position;\r\n    let mainV = new THREE.Vector2();\r\n    for (let i = 0; i < uv.count; i++){\r\n        let uvRatio = 1 - uv.getX(i);\r\n      let y = pos.getY(i);\r\n      mainV.copy(c).rotateAround(center, (arc * uvRatio));\r\n      pos.setXYZ(i, mainV.x, y, -mainV.y);\r\n    }\r\n    \r\n    pos.needsUpdate = true;\r\n    \r\n  }\r\nconst Wrapper = styled.section`\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: -1;\r\n  position: fixed;\r\n  background-color: #9BA4B5;\r\n`","import React from 'react';\nimport UI from './component/UI';\nimport Web3D from './component/Web3D';\n\nconst App = () => {\n  console.log(\"##########\")\n  return (\n      <>\n         <Web3D/>\n         {/* <UI/> */}\n      </>\n  );\n};\nexport default App;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { changeTexture,changeShirt } from './Web3D';\r\nconst UI = () => {\r\n    const [isFull,setFull] = React.useState(true);\r\n    const onClickItem=(e,type)=>{\r\n        if(type ==='full')\r\n            setFull(true);\r\n        else    \r\n            setFull(false);\r\n        changeShirt(type==='full'?true:false);\r\n    }\r\n    return (\r\n        <Wrapper>\r\n            <div className='container'>\r\n                <div className={isFull?'active':\"\"}  onClick={(e)=>{\r\n                    onClickItem(e,\"full\");\r\n                }}>Full Sleeve</div>\r\n                <div className={!isFull?'active':\"\"} onClick={(e)=>{\r\n                    onClickItem(e,\"half\");\r\n                }}>Half Sleeve</div>\r\n            </div> \r\n            <input type=\"file\"   accept=\".jpg, .jpeg, .png\" id=\"myFile\" name=\"filename\" onChange={(e)=>{\r\n                 const url = URL.createObjectURL(e.target.files[0]);\r\n                 changeTexture(isFull,url);\r\n            }}/>\r\n        </Wrapper>\r\n    );\r\n    \r\n};\r\nexport default UI;\r\n\r\nconst Wrapper = styled.div`\r\n    .container{\r\n        display: flex;\r\n        color: aliceblue;\r\n        gap: 1rem;\r\n        padding: 2rem;\r\n        user-select: none;\r\n        div{\r\n            font-size: 1rem;\r\n            color: #F1F6F9;\r\n            padding: .5rem;\r\n            background-color: #212A3E;\r\n            border-radius: 5px;\r\n            border: 1px solid #F1F6F9;\r\n            cursor: pointer;\r\n        }\r\n        .active{\r\n            border: 2px solid #FFF9DE;\r\n        }\r\n    }\r\n    input{\r\n        padding: 2rem ;\r\n        font-size: 1rem;\r\n        cursor: pointer;\r\n        color: aliceblue;\r\n        user-select: none;\r\n    }\r\n    input[type=\"file\"]::file-selector-button {\r\n            border: 2px solid aliceblue;\r\n            padding: .5rem;\r\n            border-radius: 0.2em;\r\n            background-color: #213555;\r\n            transition: 1s;\r\n            color: aliceblue;\r\n        }\r\n\r\n`","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}